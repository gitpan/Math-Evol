%!PS-Adobe-2.0
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%        This Postscript is Copyright (c) 2002, Peter J Billam          %
%     c/o P J B Computing, GPO Box 669, Hobart TAS 7001, Australia      %
%                                                                       %
% Permission is granted  to any individual or institution to use, copy, %
% modify or redistribute this software, so long as it is not resold for %
% profit,  and provided this notice is retained.   Neither Peter Billam %
% nor  P J B Computing  make any representations  about the suitability %
% of this software for any purpose. It is provided "as is", without any %
% express or implied warranty.                http://www.pjb.com.au     %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%EndComments
%%BeginProlog

% the page ...
/lmar    40 def
/rmar   565 def
% /botmar  40 def /topmar 800 def   % full a4
/botmar 190 def   % fits centre bit of gv screen
/topmar 655 def

% The "Deterministic Algorithm" from "Fractals Everywhere",
% Michael Barnsley, Academic Press, p.88

% The IFS is   newx = a[k]*x + b[k]*y + e[k]; newy = c[k]*x + d[k]*y + f[k];
% So the IFS is specified by the arrays a,b,c,d,e,f and their dimension n

% BUT NOTE THAT Barnsley's b and c are swapped compared with the
% b and c in PostScript's matrix notation eg for concat ...

% can always mutate without changing image by adding a=1 b=0 c=0 d=1 e=0 f=0...

% the starting-image ...
/starting_image {
	0 0.5 moveto 1 0.5 lineto 0.5 0.5 moveto 0.5 0 lineto fill
} bind def

% recursion to plot points ...
/draw_image {
	save
	/numit numit 1 add def
	/k 0 def {
		numit numits ge {
			starting_image
		} {
			gsave
			[a k get c k get b k get d k get e k get f k get] concat draw_image
			grestore
		} ifelse
		/k k 1 add def k n ge { exit } if
	} loop
	restore
} bind def

%%EndProlog
%%Page: 1 1
%%BeginPageSetup
%%EndPageSetup

% the image ...
/numits 6 def
160 130 translate
400 400 scale
0.02 setlinewidth

/n 4 def
% tree
/a [ 0.0  0.42 % evol step 0.1  min  0.4  max 0.9
 0.42          % evol step 0.07 min  0.8  max 0.45
 0.1 ] def     % evol step 0.07 min -0.18 max 0.15
/b [ 0.0  0.42 % evol step 0.11 min -0.1  max 0.48
 -0.42         % evol step 0.15 min -0.5  max 0.3
 0.0 ] def     % evol step 0.07 min -0.05 max 0.3
/c [ 0.0 -0.42 % evol step 0.1  min -0.5  max 0.1
 -0.42         % evol step 0.05 min -0.5  max -0.2
 0.0 ] def     % evol step 0.07 min -0.05 max 0.32
/d [ 0.5       % evol step 0.03 min 0.1   max 0.6
 0.42          % evol step 0.1  min 0.4   max 0.9
 0.42          % evol step 0.05 min 0.2   max 0.5
 0.1 ] def     % evol step 0.03 min 0.05  max 0.3
/e [ 0.0       % evol step 0.05 min -0.1 max 0.1
0.0            % evol step 0.05 min -0.1 max 0.1
0.0            % evol step 0.05 min -0.1 max 0.1
0.0 ] def      % evol step 0.05 min -0.1 max 0.1
/f [ 0.0  0.2  % evol step 0.35 min 0.1   max 1.8
 0.2           % evol step 0.35 min 0.1   max 1.8
 0.2 ] def     % evol step 0.06 min 0.15  max 0.5


/numit 0 def
draw_image

showpage
%%EOF

